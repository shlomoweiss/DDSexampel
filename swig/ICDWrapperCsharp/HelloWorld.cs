//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace ICDWrapper {

public class HelloWorld : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal HelloWorld(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(HelloWorld obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(HelloWorld obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~HelloWorld() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ICDWrapperPINVOKE.delete_HelloWorld(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public HelloWorld() : this(ICDWrapperPINVOKE.new_HelloWorld__SWIG_0(), true) {
  }

  public HelloWorld(HelloWorld x) : this(ICDWrapperPINVOKE.new_HelloWorld__SWIG_1(HelloWorld.getCPtr(x)), true) {
    if (ICDWrapperPINVOKE.SWIGPendingException.Pending) throw ICDWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void index(uint _index) {
    ICDWrapperPINVOKE.HelloWorld_index__SWIG_0(swigCPtr, _index);
  }

  public uint index() {
    uint ret = ICDWrapperPINVOKE.HelloWorld_index__SWIG_1(swigCPtr);
    return ret;
  }

  public void message(string _message) {
    ICDWrapperPINVOKE.HelloWorld_message__SWIG_0(swigCPtr, _message);
    if (ICDWrapperPINVOKE.SWIGPendingException.Pending) throw ICDWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public void message(SWIGTYPE_p_std__string _message) {
    ICDWrapperPINVOKE.HelloWorld_message__SWIG_1(swigCPtr, SWIGTYPE_p_std__string.swigRelease(_message));
    if (ICDWrapperPINVOKE.SWIGPendingException.Pending) throw ICDWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public string message() {
    string ret = ICDWrapperPINVOKE.HelloWorld_message__SWIG_2(swigCPtr);
    return ret;
  }

}

}
